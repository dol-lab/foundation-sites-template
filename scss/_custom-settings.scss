//  Spaces Custom Settings for Foundation
//  -----------------------------
//
//  Table of Contents:
//
//   1. Mixins and Functions
//   2. Grid
//   3. Typography
//   4. Card
//   5. Spaces Card
//   6. User Card
//   7. Clipping
//   8. Dropdown
//   9. Switch
//   10. Button
//   11. Dot Menu
//   12. Excerpt
//   13. Menu
//   14. Icons
//   15. Tabs
//   16. Scroll Snapping



// 1. Mixins and Functions
// ---------


@mixin foundation-palette($selector: '&', $child: '', $property: 'color') {
  @each $color-name, $color in $foundation-palette {
    #{$selector}.#{$color-name} #{$child} {
      #{$property}: $color;
      &:hover {
        #{$property}: scale-color($color, $lightness: -15%);
      }
    }
  }
}
@mixin crossBrowser($property, $val) {
  -webkit-#{$property}: $val;
  -moz-#{$property}: $val;
  -ms-#{$property}: $val;
  #{$property}: $val;
}

@function strip-unit($number) {
  @if type-of($number)=='number'and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}


// 2. Grid
// ---------

// .grid-container {
//   position: relative;
// }
.cell {
  position: relative;
}

// 3. Typography
// ---------

p {
  font-size: $paragraph-font-size;
}
a {
  &:focus {
    outline: none;
  }
  @include foundation-palette();
  @include foundation-palette('li', '>&');
}
small {
  color: $dark-gray;
}
code {
  border-radius: $global-radius-small;
}
.input-reset {
  border: none;
  border-radius: 0;
  padding: 0.5rem 0.75rem;
  min-height: 2.5em;
  height: 2.5em;
  resize: none;
  font-size: 0.875rem;
}


// 4. Card
// ---------

.card {
  transition: box-shadow $global-transition-medium $global-transition-timing;
  .card-anchor {
    color: inherit;
    text-decoration: none;
    display: flex;
    flex-direction: column;
    padding: 0 !important;
    @include foundation-palette();
  }
  h1, h2, h3, h4, h5, h6 {
    display: flex;
    align-items: center;
  }
  &.muted {
    opacity: 0.5;
  }
  &.large {
    margin: 15px 0;
  }
  &:not(.static):hover {
    cursor: pointer;
    box-shadow: $global-drop-shadow;
    transition: box-shadow $global-transition-short $global-transition-timing;
  }
}
.card-title {
  display: flex;
  align-items: center;
  font-size: 1rem;
  line-height: $header-lineheight;
  font-weight: 300;
  .fa {
    font-size: 0.75em;
    margin-right: 0.5em;
  }
}
.card-section, .card-divider {
  padding: 8px 12px;
  & > a {
    width: 100%;
    text-decoration: none;
    &:hover {
      background: $very-light-gray;
    }
  }
  &.small {
    padding: 5px;
  }
  &.large {
    padding: 16px 20px;
  }

  &.xlarge {
    padding: 20px 30px;
  }
  &.no-padding {
    padding: 0;
    & > a {
      padding: 8px 12px;
      &.small > a {
        padding: 5px;
      }
    }
  }
}
.card-divider {
  border-top: 1px solid $light-gray;
  &:first-child {
    border: none;
  }
  input, textarea {
    @extend .input-reset;
  }
}

// 5. Spaces Card
// ---------

.space-title {
  @extend .card-title;
  line-height: 1.5;
  position: absolute;
  display: flex;
  padding: 0 10px 0;
  z-index: 1;
  background: $white;
  left: 0;
  top: 50%;
  transform: perspective(1px) translateY(-50%);
  max-width: 80%;
  border-radius: 0 2px 2px 0;
  align-items: center;
  span {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  .fa {
    font-size: 0.75em;
    margin-right: 0.5em;
  }
}
.wide {
  width: 100%;
  max-width: 100%;
  padding: 0;
  .large {
    border-radius: 0;
    margin: 0;
  }
  @media (min-width: 1366px) {
    .space-title {
      left: calc(50vw - ((1080px - 20px) / 2));
      border-radius: 2px;
    }
  }
}

.large {
  .space-title {
    font-size: 1.5rem;
    white-space: normal;
    max-height: 3em;
    @media (max-width: 640px) {
      font-size: 1.25rem;
      white-space: nowrap;
      max-height: initial;
    }
  }
}


// 6. User Card
// ---------

.user {
  display: flex;
  align-items: center;
  height: 65px;
  &.small,
  .small & {
    height: 36px;
  }
  &.large,
  .large & {
    height: 128px;
  }
  input,
  textarea {
    @extend .input-reset;
  }
}
.avatar-container {
  width: calc(65px + 20px);
  .small & {
    width: 36px;
  }
  .large & {
    width: 128px;
  }
}
.user-meta {
  padding: 0 1em;
  width: 100%;
  line-height: 1;
  &.checkable {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
}
.user-name {
  font-size: 0.875em;
  display: flex;
  align-items: center;
  .fa {
    margin-left: 1em;
    color: #aaa;
  }
}
.user-mail {
  font-size: 0.75em;
  color: #aaa;
}

.author-thumbnail {
  margin-right: 10px;

  &.small {
    min-width: 40px;
    min-height: 40px;
    width: 40px;
    height: 40px;
  }

  &.large {
    min-width: 60px;
    min-height: 60px;
    width: 60px;
    height: 60px;
  }
}

// 7. Clipping
// ---------

.clipped {
  position: relative;
  overflow: hidden;
  display: flex;
  align-content: center;
  width: 100%;
  img, iframe {
    position: absolute;
    top:0;
    left:0;
    height: 100%;
    width: 100%;
    object-fit: cover;
    /* IE 9+ Hack for object-fit. Possibly good option as standard as well */
    @media screen and (min-width:0\0) and (min-resolution: +72dpi) {
      height: auto;
      transform: translate(-50%, -50%);
    }
  }
}
.square {
  padding-bottom: 100%;
  height: 0; 
}
.letterbox {
  padding-bottom: 56.25%;
  height: 0; 
}
.space-header {
  background: $very-light-gray;
  padding-bottom: 65px;
  height: 100%;
  align-content: center;
  background-size: 50px;
  background-repeat: repeat;
  background-position: center;

  .large>&,
  .large>a>& {
    height: 200px;
    max-height: 25vw;
    min-height: 65px;
    font-size: 1.5rem;
  }
}
.post-header {
  @extend .space-header;
  padding-bottom: 100px;

}
.variable {
  padding-bottom: 0;
  height: 100%;
  max-height: 200px;
  img {
    position: relative;
  }
}

// 8. Dropdown
// -----------


.dropdown-pane {
  max-width: 100%;
  display: inline-block;
  box-shadow: $global-drop-shadow;
  background-color: $white;
}

.dropdown-pane-arrow {
  display: block;
  background: #fff;
  border-left: 1px solid #f0f0f0;
  border-top: 1px solid #f0f0f0;
  width: 20px; 
  height: 20px;
  position: absolute;
  right: 17px;
  margin-top: -10px;
  z-index: 100;
  transform: rotate(45deg);
  border-bottom-right-radius: 20px;
}
.space-info-block {
  flex-wrap: wrap;
  display: inline-flex;
  background: $very-light-gray;
  color: $very-dark-gray;
  margin: 3px;
  border-radius: $global-radius;
  overflow: hidden;
  & span {
    display: inline-block;
    padding: 5px 8px;
    &:last-child {
      background: $light-gray;
      color: $very-dark-gray;
      font-weight: bold;
    }
  }
  &.small {
    font-size: 0.875em;
  }
  & a {
    display: inline-block;
    padding: 5px 8px;
    background: $light-gray;
    color: $very-dark-gray;
    font-weight: bold;
  }
}


// 9. Switch
// ---------



.switch {
  display: flex;
  align-items: center;
  .switch-paddle {
    padding: 0;
    display: flex;
    align-items: center;
    border-radius: 0;
    height: 100%;
    background: none;
    &:before {
      content: '';
      background: $dark-gray;
      height: 1px;
      width: 100%;
    }
    &:after {
      content: '';
      top: initial;
      left: 0;
      border-radius: 50%;
      box-shadow: inset 0 0 0 1px $dark-gray;
      box-sizing: content-box;
    }
    &:hover {
      &:after {
        background: $light-gray;
      }
    }
  }
  input:checked ~ .switch-paddle {
    color: get-color(primary);
    background: none;
    &:after {
      box-shadow: inset 0 0 0 1em currentColor;
    }
    &:hover {
      color: scale-color(get-color(primary), $lightness: -15%);
    }
  }
  @include foundation-palette($child: 'input:checked ~ .switch-paddle');
}

// 10. Button & Input
// ---------

.button-group {
  &.radius {
    .button {
      border-radius: 0;
      &:first-child {
        border-radius: $global-radius 0 0 $global-radius;
      }

      &:last-child {
        border-radius: 0 $global-radius $global-radius 0;
      }
    }
  }
}
button, .button {
  &.radius, .radius & {
    border-radius: $global-radius;
  }
  &:focus, &:active {
    background: none;
    outline: none;
  }
}
input {
  &:focus, &:active {
    outline: none;
  }
}
.arrow-button {
  display: flex;
  align-items: center;
  font-size: $paragraph-font-size;
  @include foundation-palette();
  .fa {
    font-size: 1rem;
    margin-right: 0.5em;
  }
  &::after {
    margin-left: auto;
    font-family: FontAwesome;
    content: '\f105';
  }
}


// 11. Dot Menu
// ---------

.dots {
  position: absolute;
  right: 0;
  bottom: 0;
  cursor: pointer;
  border-radius: 0;
  
  &:hover:after {
    border-left: 1px solid #f0f0f0;
    color: $very-dark-gray;
  }
  &:after {
    content: '...'; 
    display: inline-block;
    white-space: nowrap;
    padding: 15px 8px 20px;
    line-height: 0;
    font-weight: 900;
    color: $dark-gray;
    letter-spacing: 2px;
  }
}
.reply-button { 
  position: absolute;
  width: 15px;
  height: 15px;
  top: 0;
  right: 0;
  padding: 10px;
  box-sizing: content-box;
  fill: $dark-gray;
  &:hover {
    cursor: pointer;
    fill: get-color('success');
  }
}


// 12. Excerpt
// ---------

@mixin excerpt($font-size: 1em, $line-height: 1.4, $lines-to-show: 3, $expand: false) {
  @if $expand == true {
    max-height: initial; /* Fallback for non-webkit */
    -webkit-line-clamp: initial;
    -webkit-box-orient: vertical;
    overflow: initial;
    text-overflow: initial;
  } @else {
    max-height: $font-size*$line-height*$lines-to-show; /* Fallback for non-webkit */
    -webkit-line-clamp: $lines-to-show;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  line-height: $line-height;
  display: block; /* Fallback for non-webkit */
  display: -webkit-box;
  font-size: $font-size;
}
.description-excerpt {
  @include excerpt($lines-to-show: 3);
}
.description-excerpt-checkbox {
  position: absolute;
  margin: 0;
  opacity: 0;
  &:checked ~ .description-excerpt {
    @include excerpt($expand: true);
  }
  &+label {
    vertical-align: initial;
    margin: initial;
  }
}


// 13. Menu
// ---------


$border: 1px solid $light-gray;
hr {
  margin: 0 auto;
  border-bottom: $border;
}
.flex-spacer-left {
  margin-left: auto;
}
.main-menu {
  background-color: #fff;
  position: relative;
  z-index: 1000;
  .menu {
    font-size: 0.875rem;
    li {
      &.menu-main-expand {
        position: static;
        .menu {
          width: 100%;
        }
      }
      a:hover {
        background: $very-light-gray;
      }
      &.no-arrow {
        &>a {
          padding-right: 0.875rem;
          &::after {
            display: none;
          }
        }
      }
      input[type=search] {
        border: none;
        box-shadow: none;
      }
      .menu-anchor {
        fill: currentColor;
      }
    }
    &>.navbar-icon {
      &>a {
        justify-content: center;
        min-width: 48px;
        &>svg {
          width: 0.875rem;
        }
      }
    }
  }
}

@include breakpoint(medium) {
  .main-menu .menu {
    &>.navbar-icon {
      &>a {
        &>span {
          display: initial;
          &+svg {
            display: none;
          }
        }
      }
    }
    @for $i from 1 through 5 {
      &>[data-order='#{$i}'] {
        order: $i;
        &>.is-dropdown-submenu {
          right: 0 !important;
          left: auto !important;
        }
        @if ($i == 1) {
          margin-left: auto;
        }
      }
    }
  }
}

@include breakpoint(small down) {
  .main-menu .menu {
    justify-content: space-around;
    &>li {
      &.navbar-icon {
        justify-content: center;
        flex-grow: 1;
        flex-basis: 0;
        order: -1;
        &>a {
          &>span {
            display: none;
          }
          &:after {
            display: none;
          }
        }
      }
      &>.menu-anchor {
          height: 48px;
          box-sizing: border-box;
          align-items: center;
          display: flex;
          color: $very-dark-gray;
          fill: currentColor;
      }
    }
    &>.flex-spacer-left {
      margin-left: initial;
    }
  }
}

li[role=menuitem] {
  list-style: none;
}
@include breakpoint(small) {
  .main-menu .accordion-menu>li:not(.navbar-icon) {
    display: none;
    #menu-state:checked~& {
      display: block;
    }
  }
}
.caret {
  content: '\f107';
  font-family: FontAwesome;
  border: none;
}

.dropdown .is-dropdown-submenu,
.accordion-menu .is-accordion-submenu {
  border-top: $border;
  border-radius: 0 0 $global-radius $global-radius;
  overflow: hidden;
  box-shadow: $global-drop-shadow;
  z-index: -1; // enforce drop-shadow hierachie.
  a {
    border-right: none;
  }
  li {
    &:first-child .submenu-anchor {
      padding-top: 1rem;
    }

    &:last-child .submenu-anchor {
      padding-bottom: 1rem;
    }
    .card-anchor {
      padding: 0;
    }
  }
}

.accordion-menu {
  .is-accordion-submenu-parent:not(.has-submenu-toggle)>a::after {
    @extend .caret;
    width: 0.62em;
    line-height: 0;
    margin-top: 0.1em;
  }
  &>.navbar-icon {
    position: static;
    width: initial;
    .submenu {
      position: absolute;
      left: 0;
      background: $white;
    }
  }
}
.dropdown, 
.accordion-menu {
  &>.no-padding>a {
    padding: 0 !important;
  }
  &>.avatar {
    img {
      width: 48px;
      height: 48px;
    }
  }
}
.dropdown {
  &>li>a {
    display: flex;
    align-items: center;
    height: 48px;
  }
  &.menu {
    &>li {
      &>a {
        @include breakpoint(medium down) {
          padding: 0.5rem;  
        }
      }
      &.is-dropdown-submenu-parent>a {
        &::after {
          @extend .caret;
          margin-right: 0.75rem;
          line-height: 0.5;
        }
        @include breakpoint(medium down) {
          padding-right: 1.25rem;  
        }
      }
    }

  }
}



// 14. Icons
// ---------

$icon-line-weight: 2;
#search-state {
  display: none;
}
.sandwich-icon, .search-icon {
  cursor: pointer;
  padding: 0;
  border-radius: 20px;
  position: relative;
  width: 48px;
  height: 48px;
  transition: 500ms;
  padding: 12px;
  box-sizing: border-box;
}
.search-icon {
  &:before,
  &:after {
    content: '';
    height: $icon-line-weight * 1px;
    position: absolute;
    display: block;
    box-shadow: inset 0 0 0 $icon-line-weight * 1px currentColor;
    transition: 300ms;
    transition-property: margin, width, height, transform, border-radius;
  }

  &:before {
    width: 14px;
    height: 14px;
    border-radius: 20px;
    @include crossBrowser(transform, translate(4px, 4px) rotate(0));

    #search-state:checked~nav & {
      height: 20px;
      width: $icon-line-weight * 1px;
      border-radius: 0;
      @include crossBrowser(transform, translate((12 - $icon-line-weight / 2) * 1px, 2px) rotate(45deg));
    }
  }


  &:after {
    width: 6px;
    transform: translate(13px, 15px) rotate(45deg);
    @include crossBrowser(transform, translate(14px, (18 - $icon-line-weight) * 1px) rotate(45deg));

    #search-state:checked~nav & {
      width: 20px;
      @include crossBrowser(transform, translate(2px, (12 - $icon-line-weight / 2) * 1px) rotate(45deg));
    }
  }

}
.search input {
  display: none;
  position: absolute;
  left: 0;
  z-index: 10;
  width: calc(100% - 150px);
  #search-state:checked~nav & {
    display: block;
  }
}

#menu-state {
  display: none;
}
.sandwich-icon {
  display: flex;
  align-items: center;
  justify-content: center;
  &:before,
  &:after {
    content: '';
    width: 20px;
    height: $icon-line-weight * 1px;
    position: absolute;
    display: block;
    box-shadow: inset 0 0 0 $icon-line-weight * 1px currentColor;
    transition: 300ms;
    transition-property: margin, width, height, transform, border-radius;
  }

  &:before {
    @include crossBrowser(transform, translate(0, -5px) rotate(0deg));
    #menu-state:checked~nav & {
      @include crossBrowser(transform, translate(0, 0) rotate(-45deg));
    }
  }

    
  &:after {
    @include crossBrowser(transform, translate(0, 5px) rotate(0deg));

    #menu-state:checked~nav & {
      @include crossBrowser(transform, translate(0, 0) rotate(45deg));
    }
  }
}

// 15. Tabs
// ---------

.tabs {
  display: flex;
  border: none;
  .tabs-title {
    text-align: center;
    float: initial;
    a {
      height: 40px;
      display: flex;
      align-items: center;
      justify-content: center;
      color: inherit;
    }
  }

  .tabs-content {
    border: none;
    color: inherit;
  }
  &.line {
    border-bottom: $border;
    // padding: 0 $global-padding;
    .tabs-title {
      &>a {
        &:hover {
          background: none;
          box-shadow: inset 0 -2px $light-gray;
        }
        &:focus,
        &[aria-selected='true'] {
          background: none;
          box-shadow: inset 0 -2px $very-dark-gray;
        }
      }
    }
  }
  &.bar {
    .tabs-title {
      width: 100%;
    }
  }
}

// 16. Scroll Snapping
// ---------

.scroll-snap-container-x {
  display: flex;
  @include crossBrowser(scroll-snap-type, x mandatory);
  overflow-x: auto;
  overflow-y: hidden;

}
.scroll-snap-element {
  &>span {
    position: -webkit-sticky;
    position: sticky;
    left: 1rem;
    &+* {
      margin-top: 0.5rem;
    }
  }
  &.start {
    @include crossBrowser(scroll-snap-align, start);
  }
  width: initial !important;
  max-width: 100%;
  box-sizing: content-box;
  @include breakpoint(small) {
    @include xy-cell($gutter-type: padding, $gutter-position: top right bottom left, $breakpoint: small);
  }
  @include breakpoint(medium) {
    @include xy-cell($gutter-type: padding, $gutter-position: top right bottom left, $breakpoint: medium);
  }
  @include breakpoint(large) {
    @include xy-cell($gutter-type: padding, $gutter-position: top right bottom left, $breakpoint: large);
  }
  margin: 0;
}

/**
 * Todo Create a Fallback if global width is bigger than the biggestbbreakpoint defined in a cell.
 * $breakpoint-fallback is a start, not finished yet, though.
 * At the moment $global width should no exceed width of 'large' breakpoint.
 */
.scroll-snap-container-x {
  $widescreen-breakpoint: '';
  .grid-margin-x {
    $breakpoint-fallback: ();
    // loop through each breakpoint-list-item.
    @each $breakpoint, $width in $breakpoints {
      $index: index(($breakpoints), ($breakpoint $width)) !global;
      @if $index==1 {
        $breakpoint-fallback: append($breakpoint-fallback, $breakpoint);
      }
      // set-up media-query.
      @include breakpoint($breakpoint) {
        // loop through all possible column counts.
        @for $i from 1 through $grid-column-count {
          // set gutter width
          $gutter: map-get($grid-margin-gutters, #{$breakpoint});
          &>.#{$breakpoint}-#{$i} {
            $container-width: 100vw;
            /*  
             *  If breakpoint width is greater or equal to global width we set the
             *  reference width from 100vw to the gloabl width.
             */
            @if (strip-unit(rem-calc(strip-unit($width))) >= strip-unit($global-width)) {
              @if ($widescreen-breakpoint == '') {
                $widescreen-breakpoint: $breakpoint;
              }
              $container-width: $global-width;
            }
            // This is where the magic happens.
            width: calc((#{$container-width} - #{$gutter}) / (#{$grid-column-count} / #{$i}) - #{$gutter});
          }
        }
      }
      $breakpoint-fallback: append($breakpoint-fallback, $breakpoint);
    }
  }
  width: 100vw;
  @include breakpoint($widescreen-breakpoint) {
    width: $global-width;
  }
}

// 17. Sections
// -----------

.section-title {
  font-size: 2rem;
  font-weight: bold;
}
.section-header {
  font-size: 1.5rem;
  font-weight: bold;
}

.section-subheader {
  font-size: 1.25rem;
}
